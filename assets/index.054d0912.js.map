{"version":3,"file":"index.054d0912.js","sources":["../../vite/modulepreload-polyfill","../../main.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import './style.css';\nimport { Feature, Map, View } from 'ol';\nimport MultiPoint from 'ol/geom/MultiPoint';\nimport GeoJSON from 'ol/format/GeoJSON';\nimport { OSM, Vector as VectorSource } from 'ol/source';\nimport { Fill, Style, Circle as CircleStyle, Stroke, Text } from 'ol/style';\nimport { Tile as TileLayer, Vector as VectorLayer } from 'ol/layer';\nimport foodData from './hopeworld.min.json';\nimport iso_3166_1_alpha_2_codes from './hopeworld.min.json';\nimport name from './hopeworld.min.json';\nimport { drawImageOrLabel } from 'ol/render/canvas';\nimport { containsCoordinate } from 'ol/extent';\nimport { ELEMENT_ARRAY_BUFFER } from 'ol/webgl';\nimport { preventDefault } from 'ol/events/Event';\nlet j, i\nlet select = document.querySelector('select');\nconsole.log(foodData);\n\nlet textVisible = true;\nlet foodType = select;\nconst highestProdArray = {};\nconst foodArray = [];\nlet product;\nlet highestNumber;\nconst countryName = [];\nconst Selection = \"Selection\";\n\n//get the highest production number for each product\n\n\nconst vectorSource = new VectorSource({\n  features: new GeoJSON().readFeatures(foodData, { dataProjection: \"EPSG:4326\", featureProjection: \"EPSG:3857\" }),\n  features: new GeoJSON().readFeatures(iso_3166_1_alpha_2_codes, { dataProjection: \"EPSG:4326\", featureProjection: \"EPSG:3857\" }),\n  features: new GeoJSON().readFeatures(name, { dataProjection: \"EPSG:4326\", featureProjection: \"EPSG:3857\" }),\n\n});\nconsole.log(highestProdArray.length)\nfoodArray.push(['None']);\n\nObject.keys(foodData.features[0].properties).forEach(key => {\n  if (key.indexOf(\"project_hope\") > -1 && key !== 'project_hope_Area' && key !== 'project_hope_Unit' && key !== 'project_hope_Summe Ergebnis') {\n\n    const name = key.split('project_hope_')[1];\n    const realName = key;\n    foodArray.push([name, realName])\n\n  }\n});\nfoodData.features.forEach((feature) => {\n  Object.keys(feature.properties).forEach(key => {\n    if (key.indexOf(\"project_hope\") > -1 && key !== 'project_hope_Area' && key !== 'project_hope_Unit' && key !== 'project_hope_Summe Ergebnis') {\n      const realName = key;\n\n      if (feature.properties[key] > highestProdArray[realName] || highestProdArray[realName] == undefined) {\n\n        highestProdArray[realName] = feature.properties[key]\n\n      }\n    }\n  });\n});\nconsole.log(highestProdArray)\n// foodData.features.forEach((feature) => {\n//   Object.keys(feature.properties).forEach(key => {\n//     if (key.indexOf(\"name\") > -1 && key !== 'project_hope_Area' && key !== 'project_hope_Unit' && key !== 'project_hope_Summe Ergebnis') {\n//       const landName = key;\n//       countryName.push(landName)\n\n//       }\n//   });\n\n// });\n// console.log(countryName)\n\n\n\n\nfoodArray.map(singleArray => select[singleArray] = select.add(new Option(singleArray[0], singleArray[1])))\n\ndocument.getElementById(\"Test\").onclick = function () {\n\n  console.log(document.getElementById(\"field\"))\n}\ndocument.getElementById(\"NumbersButton\").onclick = function () {\n  if (textVisible == true) {\n    textVisible = false\n  }\n  else if (textVisible == false) {\n    textVisible = true\n  }\n  vectorSource.changed();\n}\n\nconst textStyle =\n  new Text({\n    font: '13px Calibri,sans-serif',\n    fill: new Fill({\n      color: '#000',\n    }),\n    stroke: new Stroke({\n      color: '#fff',\n      width: 4,\n    }),\n\n  })\n\n//styling\nconst myStyleFunction = function (feature, resolution) {\n  if (product === undefined) {\n    return new Style({\n\n      fill: new Fill({\n\n        color: 'grey',\n\n      }),\n      stroke: new Stroke({\n\n        color: 'black',\n        width: 1.5\n      }),\n\n    })\n  }\n  const mapStyle = new Style({\n\n    fill: new Fill({\n\n      color: 'grey',\n\n    }),\n    stroke: new Stroke({\n\n      color: 'black',\n      width: 1.5\n    }),\n\n  })\n  const highestValue = highestProdArray[product]\n  console.log(\"highestValue\", highestValue)\n\n  textStyle\n    .setText(\n      feature.get(product) + \" \" + feature.get('project_hope_Unit')\n    )\n  if (feature.get(product) == null || feature.get(product) == 0) {\n    {\n      return mapStyle\n    }\n  }\n  else if (feature.get(product) < highestValue / 85) {\n\n    return new Style({\n\n      text: textVisible ? textStyle : null,\n\n      fill: new Fill({\n\n        color: 'rgba(254,229,217,1)',\n\n      }),\n      stroke: new Stroke({\n\n        color: 'black',\n        width: 1.5\n      })\n\n    })\n\n  }\n  else if (feature.get(product) < highestValue / 60) {\n\n    return new Style({\n      text: textVisible ? textStyle : null,\n      fill: new Fill({\n\n        color: 'rgba(252,174,145,1)',\n\n      }),\n      stroke: new Stroke({\n\n        color: 'black',\n        width: 1.5\n      })\n    })\n\n  }\n\n  else if (feature.get(product) < highestValue / 40) {\n\n    return new Style({\n      text: textVisible ? textStyle : null,\n      fill: new Fill({\n\n        color: 'rgba(251,106,74,1)',\n\n      }),\n      stroke: new Stroke({\n\n        color: 'black',\n        width: 1.5\n\n      })\n    })\n\n  }\n  else if (feature.get(product) < highestValue / 20) {\n\n    return new Style({\n      text: textVisible ? textStyle : null,\n      fill: new Fill({\n\n        color: 'rgba(222,45,38,1)',\n\n      }),\n      stroke: new Stroke({\n\n        color: 'black',\n        width: 1.5\n      })\n\n    })\n  }\n  else if (feature.get(product) > highestValue / 20) {\n\n    return new Style({\n      text: textVisible ? textStyle : null,\n      fill: new Fill({\n\n        color: 'rgba(165,15,21,1)',\n\n      }),\n      stroke: new Stroke({\n\n        color: 'black',\n        width: 1.5\n      })\n\n    })\n\n  }\n  else {\n\n    return new Style({\n      text: textStyle,\n      fill: new Fill({\n\n        color: 'grey',\n\n      }),\n      stroke: new Stroke({\n\n        color: 'black',\n\n      })\n    })\n  }\n\n}\n\nconst vectorLayer = new VectorLayer({\n  style: myStyleFunction,\n  source: vectorSource,\n});\n\nconst map = new Map({\n  layers: [vectorLayer],\n  target: 'map',\n  view: new View({\n    center: [0, 3000000],\n    zoom: 2,\n  }),\n});\n//new code\nconst selectStyle = new Style({\n  fill: new Fill({\n    color: 'grey',\n  }),\n  stroke: new Stroke({\n    color: 'blue',\n    width: 2,\n  }),\n});\n//Change category \ndocument.getElementById(\"field\").onchange = function (event) {\n  product = undefined;\n  const value = event.target.value\n  product = value\n  vectorSource.changed();\n  console.log(value)\n  if (product !== \"None\" || product !== undefined) {\n    if (selected !== null) {\n      selected.setStyle(undefined);\n      selected = null;\n    }\n  }\n}\n\nconst status = document.getElementById('status');\n\nlet selected = null;\nmap.on('pointermove', function (e) {\n  if (selected !== null) {\n    selected.setStyle(undefined);\n    selected = null;\n  }\n\n  map.forEachFeatureAtPixel(e.pixel, function (selectedfeature) {\n    const mostProduced = Object.entries(selectedfeature.getProperties()).filter((element => {\n      if(element[1] === null){\n        return false;   \n      }\n      if (element[0].indexOf(\"project_hope\") > -1 && element[0] !== 'project_hope_Area' && element[0] !== 'project_hope_Unit' && element[0] !== 'project_hope_Summe Ergebnis') {\n        return true\n      }\n      else {\n        return false\n      }\n    })).sort((a, b) => {\n      return b[1] - a[1]\n    });\n    \n    if (product == \"None\" || product == undefined) {\n      selected = selectedfeature;\n      selectStyle.getFill().setColor(selectedfeature.get('COLOR') || '#eeeeee');\n      selectedfeature.setStyle(selectStyle); // Textstyle here\n      const mostProducedProduct = mostProduced[0]\n      console.log(mostProducedProduct)\n      return true;\n    }\n    \n  });\n  if (selected) {\n    status.innerHTML = selected.get('ECO_NAME');\n  } else {\n    status.innerHTML = '&nbsp;';\n\n  }\n});\n//end imported hover code\n"],"names":["iso_3166_1_alpha_2_codes","name"],"mappings":"4FAAA,KAAM,GAAI,UAAoB,CAC1B,KAAM,GAAU,SAAS,cAAc,QAAQ,QAC/C,GAAI,GAAW,EAAQ,UAAY,EAAQ,SAAS,iBAChD,OAEJ,SAAW,KAAQ,UAAS,iBAAiB,6BACzC,EAAe,GAEnB,GAAI,kBAAiB,AAAC,GAAc,CAChC,SAAW,KAAY,GACnB,GAAI,EAAS,OAAS,YAGtB,SAAW,KAAQ,GAAS,WACxB,AAAI,EAAK,UAAY,QAAU,EAAK,MAAQ,iBACxC,EAAe,KAG5B,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,KACjD,WAAsB,EAAQ,CAC1B,KAAM,GAAY,GAClB,MAAI,GAAO,WACP,GAAU,UAAY,EAAO,WAC7B,EAAO,gBACP,GAAU,eAAiB,EAAO,gBACtC,AAAI,EAAO,cAAgB,kBACvB,EAAU,YAAc,UACvB,AAAI,EAAO,cAAgB,YAC5B,EAAU,YAAc,OAExB,EAAU,YAAc,cACrB,EAEX,WAAwB,EAAM,CAC1B,GAAI,EAAK,GAEL,OACJ,EAAK,GAAK,GAEV,KAAM,GAAY,EAAa,GAC/B,MAAM,EAAK,KAAM,KAEvB,AAAoB,y+lyNC3BtB,GAAI,GAAS,SAAS,cAAc,UACpC,QAAQ,IAAI,GAEZ,GAAI,GAAc,GAElB,KAAM,GAAmB,GACnB,EAAY,GAClB,GAAI,GAQJ,KAAM,GAAe,GAAI,GAAa,CACpC,SAAU,GAAI,KAAU,aAAa,EAAU,CAAE,eAAgB,YAAa,kBAAmB,cACjG,SAAU,GAAI,KAAU,aAAaA,EAA0B,CAAE,eAAgB,YAAa,kBAAmB,cACjH,SAAU,GAAI,KAAU,aAAaC,EAAM,CAAE,eAAgB,YAAa,kBAAmB,gBAG/F,QAAQ,IAAI,EAAiB,QAC7B,EAAU,KAAK,CAAC,SAEhB,OAAO,KAAK,EAAS,SAAS,GAAG,YAAY,QAAQ,GAAO,CAC1D,GAAI,EAAI,QAAQ,gBAAkB,IAAM,IAAQ,qBAAuB,IAAQ,qBAAuB,IAAQ,8BAA+B,CAE3I,KAAM,GAAO,EAAI,MAAM,iBAAiB,GAClC,EAAW,EACjB,EAAU,KAAK,CAAC,EAAM,OAI1B,EAAS,SAAS,QAAQ,AAAC,GAAY,CACrC,OAAO,KAAK,EAAQ,YAAY,QAAQ,GAAO,CAC7C,GAAI,EAAI,QAAQ,gBAAkB,IAAM,IAAQ,qBAAuB,IAAQ,qBAAuB,IAAQ,8BAA+B,CAC3I,KAAM,GAAW,EAEjB,AAAI,GAAQ,WAAW,GAAO,EAAiB,IAAa,EAAiB,IAAa,OAExF,GAAiB,GAAY,EAAQ,WAAW,SAMxD,QAAQ,IAAI,GAgBZ,EAAU,IAAI,GAAe,EAAO,GAAe,EAAO,IAAI,GAAI,QAAO,EAAY,GAAI,EAAY,MAErG,SAAS,eAAe,QAAQ,QAAU,UAAY,CAEpD,QAAQ,IAAI,SAAS,eAAe,WAEtC,SAAS,eAAe,iBAAiB,QAAU,UAAY,CAC7D,AAAI,GAAe,GACjB,EAAc,GAEP,GAAe,IACtB,GAAc,IAEhB,EAAa,WAGf,KAAM,GACJ,GAAI,GAAK,CACP,KAAM,0BACN,KAAM,GAAI,GAAK,CACb,MAAO,SAET,OAAQ,GAAI,GAAO,CACjB,MAAO,OACP,MAAO,MAMP,EAAkB,SAAU,EAAS,EAAY,CACrD,GAAI,IAAY,OACd,MAAO,IAAI,GAAM,CAEf,KAAM,GAAI,GAAK,CAEb,MAAO,SAGT,OAAQ,GAAI,GAAO,CAEjB,MAAO,QACP,MAAO,QAKb,KAAM,GAAW,GAAI,GAAM,CAEzB,KAAM,GAAI,GAAK,CAEb,MAAO,SAGT,OAAQ,GAAI,GAAO,CAEjB,MAAO,QACP,MAAO,QAIL,EAAe,EAAiB,GAOtC,MANA,SAAQ,IAAI,eAAgB,GAE5B,EACG,QACC,EAAQ,IAAI,GAAW,IAAM,EAAQ,IAAI,sBAEzC,EAAQ,IAAI,IAAY,MAAQ,EAAQ,IAAI,IAAY,EAEjD,EAGF,EAAQ,IAAI,GAAW,EAAe,GAEtC,GAAI,GAAM,CAEf,KAAM,EAAc,EAAY,KAEhC,KAAM,GAAI,GAAK,CAEb,MAAO,wBAGT,OAAQ,GAAI,GAAO,CAEjB,MAAO,QACP,MAAO,QAMJ,EAAQ,IAAI,GAAW,EAAe,GAEtC,GAAI,GAAM,CACf,KAAM,EAAc,EAAY,KAChC,KAAM,GAAI,GAAK,CAEb,MAAO,wBAGT,OAAQ,GAAI,GAAO,CAEjB,MAAO,QACP,MAAO,QAMJ,EAAQ,IAAI,GAAW,EAAe,GAEtC,GAAI,GAAM,CACf,KAAM,EAAc,EAAY,KAChC,KAAM,GAAI,GAAK,CAEb,MAAO,uBAGT,OAAQ,GAAI,GAAO,CAEjB,MAAO,QACP,MAAO,QAMJ,EAAQ,IAAI,GAAW,EAAe,GAEtC,GAAI,GAAM,CACf,KAAM,EAAc,EAAY,KAChC,KAAM,GAAI,GAAK,CAEb,MAAO,sBAGT,OAAQ,GAAI,GAAO,CAEjB,MAAO,QACP,MAAO,QAKJ,EAAQ,IAAI,GAAW,EAAe,GAEtC,GAAI,GAAM,CACf,KAAM,EAAc,EAAY,KAChC,KAAM,GAAI,GAAK,CAEb,MAAO,sBAGT,OAAQ,GAAI,GAAO,CAEjB,MAAO,QACP,MAAO,QAQJ,GAAI,GAAM,CACf,KAAM,EACN,KAAM,GAAI,GAAK,CAEb,MAAO,SAGT,OAAQ,GAAI,GAAO,CAEjB,MAAO,aAQT,EAAc,GAAI,GAAY,CAClC,MAAO,EACP,OAAQ,IAGJ,EAAM,GAAI,GAAI,CAClB,OAAQ,CAAC,GACT,OAAQ,MACR,KAAM,GAAI,GAAK,CACb,OAAQ,CAAC,EAAG,KACZ,KAAM,MAIJ,EAAc,GAAI,GAAM,CAC5B,KAAM,GAAI,GAAK,CACb,MAAO,SAET,OAAQ,GAAI,GAAO,CACjB,MAAO,OACP,MAAO,MAIX,SAAS,eAAe,SAAS,SAAW,SAAU,EAAO,CAC3D,EAAU,OACV,KAAM,GAAQ,EAAM,OAAO,MAC3B,EAAU,EACV,EAAa,UACb,QAAQ,IAAI,GACR,KAAY,QAAU,IAAY,SAChC,IAAa,MACf,GAAS,SAAS,QAClB,EAAW,OAKjB,KAAM,GAAS,SAAS,eAAe,UAEvC,GAAI,GAAW,KACf,EAAI,GAAG,cAAe,SAAU,EAAG,CACjC,AAAI,IAAa,MACf,GAAS,SAAS,QAClB,EAAW,MAGb,EAAI,sBAAsB,EAAE,MAAO,SAAU,EAAiB,CAC5D,KAAM,GAAe,OAAO,QAAQ,EAAgB,iBAAiB,OAAQ,GACxE,EAAQ,KAAO,KACT,GAEL,EAAQ,GAAG,QAAQ,gBAAkB,IAAM,EAAQ,KAAO,qBAAuB,EAAQ,KAAO,qBAAuB,EAAQ,KAAO,+BAMxI,KAAK,CAAC,EAAG,IACJ,EAAE,GAAK,EAAE,IAGlB,GAAI,GAAW,QAAU,GAAW,KAAW,CAC7C,EAAW,EACX,EAAY,UAAU,SAAS,EAAgB,IAAI,UAAY,WAC/D,EAAgB,SAAS,GACzB,KAAM,GAAsB,EAAa,GACzC,eAAQ,IAAI,GACL,MAIX,AAAI,EACF,EAAO,UAAY,EAAS,IAAI,YAEhC,EAAO,UAAY"}